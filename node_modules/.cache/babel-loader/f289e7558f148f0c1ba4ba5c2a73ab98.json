{"ast":null,"code":"var _jsxFileName = \"/Users/roxieschnoor/Desktop/sei/projects/API-app/sprinkleanddash/recipe-app/src/Components/CategoryMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryMeals = ({\n  match\n}) => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    getImages();\n  }, []);\n\n  const getImages = async () => {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${match.params.meals}`);\n    const data = await response.json();\n    console.log(data.meals);\n    setImages(data.meals);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"categories\",\n    children: images.map(recipe => {\n      const {\n        strMeal,\n        strMealThumb\n      } = recipe;\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"catContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: strMealThumb,\n          alt: strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, strMeal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryMeals, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = CategoryMeals;\nexport default CategoryMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMeals\");","map":{"version":3,"sources":["/Users/roxieschnoor/Desktop/sei/projects/API-app/sprinkleanddash/recipe-app/src/Components/CategoryMeals.js"],"names":["React","useState","useEffect","CategoryMeals","match","images","setImages","getImages","response","fetch","params","meals","data","json","console","log","map","recipe","strMeal","strMealThumb"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAEjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEFC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDL,KAAK,CAACM,MAAN,CAAaC,KAAM,EAA5E,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACD,KAAjB;AACAL,IAAAA,SAAS,CAACM,IAAI,CAACD,KAAN,CAAT;AACD,GALD;;AAOE,sBAEI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,cAEDN,MAAM,CAACW,GAAP,CAAYC,MAAD,IAAY;AACpB,YAAM;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,UAA0BF,MAAhC;AAEA,0BACE;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA,gCACE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAEC,YAAV;AAAwB,UAAA,GAAG,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAuCA,OAAvC;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KATF;AAFC;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBC,CA/BL;;GAAMf,a;;KAAAA,a;AAiCN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst CategoryMeals = ({ match }) => {\n\n    const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    getImages();\n  }, []);\n\n  const getImages = async () => {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${match.params.meals}`)\n    const data = await response.json()\n    console.log(data.meals)\n    setImages(data.meals)\n  }\n\n    return (\n\n        <section className=\"categories\">\n      \n      {images.map((recipe) => {\n          const {strMeal, strMealThumb} = recipe\n \n          return (\n            <article className=\"catContainer\" key={strMeal}>\n              <h2>{strMeal}</h2>\n              <img src={strMealThumb} alt={strMeal} />\n            </article>\n          )\n        })}\n       </section>\n     );\n    }\n\nexport default CategoryMeals;"]},"metadata":{},"sourceType":"module"}